{"version":3,"file":"index.test.js","sourceRoot":"","sources":["../../spec/index.test.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,4CAAuB;AAEvB,iDAAsE;AAEtE,4EAAwD;AACxD,4CAAsB;AAEtB,sCAAyD;AAGzD;IACI;IAEA,CAAC;IAHC,GAAG;QADR,oBAAU;;OACL,GAAG,CAIR;IAAD,UAAC;CAAA,AAJD,IAIC;AAGD;IAA2B,gCAAG;IAC1B,sBAA2B,GAAQ;QAAnC,YACI,iBAAO,SACV;QAF0B,SAAG,GAAH,GAAG,CAAK;;IAEnC,CAAC;IAHC,YAAY;QADjB,qBAAa;QAEG,WAAA,gBAAM,CAAA;yCAAa,GAAG;OADjC,YAAY,CAIjB;IAAD,mBAAC;CAAA,AAJD,CAA2B,aAAG,GAI7B;AAMD;IAAuB,4BAAY;IAAnC;;IACA,CAAC;IADK,QAAQ;QAJb,6BAAS,CAAC;YACP,QAAQ,EAAE,aAAa;SAC1B,CAAC;QACD,qBAAa;OACR,QAAQ,CACb;IAAD,eAAC;CAAA,AADD,CAAuB,YAAY,GAClC;AAED,IAAI,SAAoB,CAAC;AAEzB,aAAI,CAAC,UAAU,CAAC;IACZ,SAAS,GAAG,IAAI,mBAAS,EAAE,CAAC;IAC5B,aAAG,CAAC,GAAG,CAAC,kBAAU,EAAE,SAAS,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC;AAEH,aAAI,CAAC,sBAAsB,EAAE,UAAA,CAAC;IAC1B,IAAM,QAAQ,GAAG,SAAS,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;IACrD,CAAC,CAAC,IAAI,CAAC,QAAQ,YAAY,QAAQ,CAAC,CAAC;IACrC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,YAAY,GAAG,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC;AAEH,aAAI,CAAC,gDAAgD,EAAE,UAAA,CAAC;IACpD,IAAM,QAAQ,GAAG,IAAK,QAAgB,EAAE,CAAC;IACzC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,YAAY,GAAG,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC","sourcesContent":["import test from 'ava';\n\nimport { Container, Inject, Injectable } from '@fluffy-spoon/inverse';\n\nimport Component, { mixins } from 'vue-class-component';\nimport Vue from 'vue';\n\nimport { VueInverse, VueInjectable } from '../src/index';\n\n@Injectable\nclass Foo {\n    constructor() {\n         \n    }\n}\n\n@VueInjectable\nclass VueBaseClass extends Vue {\n    constructor(@Inject public foo: Foo) {\n        super();\n    }\n}\n\n@Component({\n    template: '<div></div>'\n})\n@VueInjectable\nclass VueClass extends VueBaseClass {\n}\n\nlet container: Container;\n\ntest.beforeEach(() => {\n    container = new Container();\n    Vue.use(VueInverse, container);\n});\n\ntest('can resolve VueClass', t => {\n    const instance = container.resolveInstance(VueClass);\n    t.true(instance instanceof VueClass);\n    t.true(instance.foo instanceof Foo);\n});\n\ntest('can create VueClass with injected dependencies', t => {\n    const instance = new (VueClass as any)();\n    t.true(instance.foo instanceof Foo);\n});"]}